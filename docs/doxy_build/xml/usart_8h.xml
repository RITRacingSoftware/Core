<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="usart_8h" kind="file" language="C++">
    <compoundname>usart.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stm32g4xx_hal.h</includes>
    <includes local="no">stm32g4xx_hal_usart.h</includes>
    <includes local="yes">core_config.h</includes>
    <includedby refid="boot_8c" local="yes">/home/matthias/racing/core/src/driver/Src/boot.c</includedby>
    <includedby refid="usart_8c" local="yes">/home/matthias/racing/core/src/driver/Src/usart.c</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>core_config.h</label>
      </node>
      <node id="5">
        <label>stm32g4xx_hal_usart.h</label>
      </node>
      <node id="1">
        <label>/home/matthias/racing/core/src/driver/Inc/usart.h</label>
        <link refid="usart_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stm32g4xx_hal.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/matthias/racing/core/src/driver/Src/usart.c</label>
        <link refid="usart_8c"/>
      </node>
      <node id="2">
        <label>/home/matthias/racing/core/src/driver/Src/boot.c</label>
        <link refid="boot_8c"/>
      </node>
      <node id="1">
        <label>/home/matthias/racing/core/src/driver/Inc/usart.h</label>
        <link refid="usart_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="usart_8h_1ad2f67cf7bf401c97bdf910648ddff884" prot="public" static="no">
        <name>CORE_USART1_UPDATE</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matthias/racing/core/src/driver/Inc/usart.h" line="9" column="9" bodyfile="/home/matthias/racing/core/src/driver/Inc/usart.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usart_8h_1a29a136f43f83b07c1ff19f71da7d4b8b" prot="public" static="no">
        <name>CORE_USART2_UPDATE</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matthias/racing/core/src/driver/Inc/usart.h" line="10" column="9" bodyfile="/home/matthias/racing/core/src/driver/Inc/usart.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usart_8h_1a229b7acf00b9cb323c3fea38412639e4" prot="public" static="no">
        <name>CORE_USART3_UPDATE</name>
        <initializer>0x04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matthias/racing/core/src/driver/Inc/usart.h" line="11" column="9" bodyfile="/home/matthias/racing/core/src/driver/Inc/usart.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="usart_8h_1a35dc06127bee8b23c08e4ec63aab66d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool core_USART_init</definition>
        <argsstring>(USART_TypeDef *usart, uint32_t baud)</argsstring>
        <name>core_USART_init</name>
        <param>
          <type>USART_TypeDef *</type>
          <declname>usart</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baud</declname>
        </param>
        <briefdescription>
<para>Initialize a USART module in asynchronous mode with the given baud rate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usart</parametername>
</parameternamelist>
<parameterdescription>
<para>The USART module to initialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>baud</parametername>
</parameternamelist>
<parameterdescription>
<para>Baud rate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the given USART is not valid of if the initialization failed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>otherwise </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matthias/racing/core/src/driver/Inc/usart.h" line="13" column="6" bodyfile="/home/matthias/racing/core/src/driver/Src/usart.c" bodystart="76" bodyend="114" declfile="/home/matthias/racing/core/src/driver/Inc/usart.h" declline="13" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="usart_8h_1a080787d9baeec30dbb2639ab958893bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool core_USART_start_rx</definition>
        <argsstring>(USART_TypeDef *usart, volatile uint8_t *rxbuf, volatile uint32_t *rxbuflen)</argsstring>
        <name>core_USART_start_rx</name>
        <param>
          <type>USART_TypeDef *</type>
          <declname>usart</declname>
        </param>
        <param>
          <type>volatile uint8_t *</type>
          <declname>rxbuf</declname>
        </param>
        <param>
          <type>volatile uint32_t *</type>
          <declname>rxbuflen</declname>
        </param>
        <briefdescription>
<para>Start the receiver for the given USART module. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usart</parametername>
</parameternamelist>
<parameterdescription>
<para>The USART module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rxbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Location where received data from the USART should be stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rxbuflen</parametername>
</parameternamelist>
<parameterdescription>
<para>Location where the number of received bytes should be stored </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the given USART is not valid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>otherwise </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matthias/racing/core/src/driver/Inc/usart.h" line="14" column="6" bodyfile="/home/matthias/racing/core/src/driver/Src/usart.c" bodystart="124" bodyend="150" declfile="/home/matthias/racing/core/src/driver/Inc/usart.h" declline="14" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="usart_8h_1aa6d598f617dc2068c62544b474bc5960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void core_USART_update_disable</definition>
        <argsstring>(USART_TypeDef *usart)</argsstring>
        <name>core_USART_update_disable</name>
        <param>
          <type>USART_TypeDef *</type>
          <declname>usart</declname>
        </param>
        <briefdescription>
<para>Disable updating the RX buffer for the given USART. Use this before reading from the buffer to which data is stored to prevent corruption. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usart</parametername>
</parameternamelist>
<parameterdescription>
<para>The USART module </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matthias/racing/core/src/driver/Inc/usart.h" line="15" column="6" bodyfile="/home/matthias/racing/core/src/driver/Src/usart.c" bodystart="242" bodyend="246" declfile="/home/matthias/racing/core/src/driver/Inc/usart.h" declline="15" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="usart_8h_1a1c56db6aae9393622a2d93a74ec0b1d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void core_USART_update_enable</definition>
        <argsstring>(USART_TypeDef *usart)</argsstring>
        <name>core_USART_update_enable</name>
        <param>
          <type>USART_TypeDef *</type>
          <declname>usart</declname>
        </param>
        <briefdescription>
<para>Enable updating the RX buffer for the given USART. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Receiving is disabled by default. Make sure to call core_USART_update_enable after setting up the receiver with core_USART_start_rx. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usart</parametername>
</parameternamelist>
<parameterdescription>
<para>The USART module </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matthias/racing/core/src/driver/Inc/usart.h" line="16" column="6" bodyfile="/home/matthias/racing/core/src/driver/Src/usart.c" bodystart="255" bodyend="259" declfile="/home/matthias/racing/core/src/driver/Inc/usart.h" declline="16" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="usart_8h_1a823dd639b55929d621d419b43450a150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool core_USART_transmit</definition>
        <argsstring>(USART_TypeDef *usart, uint8_t *txbuf, uint8_t txbuflen)</argsstring>
        <name>core_USART_transmit</name>
        <param>
          <type>USART_TypeDef *</type>
          <declname>usart</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>txbuf</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>txbuflen</declname>
        </param>
        <briefdescription>
<para>Transmit data from a USART. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is blocking and will not return until all data has been transmitted. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usart</parametername>
</parameternamelist>
<parameterdescription>
<para>The USART module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>txbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Location where the data to be transmitted is read from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>txbuflen</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to transmit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>if transmission was successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>otherwise </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matthias/racing/core/src/driver/Inc/usart.h" line="17" column="6" bodyfile="/home/matthias/racing/core/src/driver/Src/usart.c" bodystart="271" bodyend="278" declfile="/home/matthias/racing/core/src/driver/Inc/usart.h" declline="17" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="usart_8h_1a3e7cc6f1cb3cee5edc74aee5c00e5428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void core_USART_RX_callback</definition>
        <argsstring>(USART_HandleTypeDef *husart)</argsstring>
        <name>core_USART_RX_callback</name>
        <param>
          <type>USART_HandleTypeDef *</type>
          <declname>husart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matthias/racing/core/src/driver/Inc/usart.h" line="18" column="6" declfile="/home/matthias/racing/core/src/driver/Inc/usart.h" declline="18" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="usart_8h_1a98eee6d24e7130a4a1c8527c207843a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool core_USART_register_callback</definition>
        <argsstring>(USART_TypeDef *usart, void(*callback)(uint8_t *, uint32_t))</argsstring>
        <name>core_USART_register_callback</name>
        <param>
          <type>USART_TypeDef *</type>
          <declname>usart</declname>
        </param>
        <param>
          <type>void(*)(uint8_t *, uint32_t)</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matthias/racing/core/src/driver/Inc/usart.h" line="19" column="6" bodyfile="/home/matthias/racing/core/src/driver/Src/usart.c" bodystart="152" bodyend="174" declfile="/home/matthias/racing/core/src/driver/Inc/usart.h" declline="19" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>USART_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USART_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stm32g4xx_hal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stm32g4xx_hal_usart.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;core_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CORE_USART1_UPDATE<sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CORE_USART2_UPDATE<sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CORE_USART3_UPDATE<sp/>0x04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="usart_8c_1a35dc06127bee8b23c08e4ec63aab66d3" kindref="member">core_USART_init</ref>(USART_TypeDef<sp/>*usart,<sp/>uint32_t<sp/>baud);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="usart_8c_1a080787d9baeec30dbb2639ab958893bd" kindref="member">core_USART_start_rx</ref>(USART_TypeDef<sp/>*usart,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*rxbuf,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*rxbuflen);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="usart_8c_1aa6d598f617dc2068c62544b474bc5960" kindref="member">core_USART_update_disable</ref>(USART_TypeDef<sp/>*usart);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="usart_8c_1a1c56db6aae9393622a2d93a74ec0b1d5" kindref="member">core_USART_update_enable</ref>(USART_TypeDef<sp/>*usart);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="usart_8c_1a823dd639b55929d621d419b43450a150" kindref="member">core_USART_transmit</ref>(USART_TypeDef<sp/>*usart,<sp/>uint8_t<sp/>*txbuf,<sp/>uint8_t<sp/>txbuflen);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>core_USART_RX_callback(USART_HandleTypeDef<sp/>*husart);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>core_USART_register_callback(USART_TypeDef<sp/>*usart,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*callback)(uint8_t<sp/>*,<sp/>uint32_t));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CORE_USART_UPRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uprintf(USART_TypeDef<sp/>*usart,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/>...);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/matthias/racing/core/src/driver/Inc/usart.h"/>
  </compounddef>
</doxygen>
